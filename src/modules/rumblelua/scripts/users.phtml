<?
if (not session.credentials.admin) then
?>
<div class='notification'>You need admin priveledges to access this page!</div>
<?
	return;
else
	my.config = getFile(session.path .. "/auth.cfg");
	my.auth = {};
	for user,pass,rights in my.config:gmatch("([^:\r\n]+):([^:\r\n]+):([^:\r\n]+)") do
		firstVisit = false;
		local domains = {};
		local admin = false;
		if ( rights == "*" ) then admin = true;
		else
			for domain in rights:gmatch("([^, ]+)") do table.insert(domains, domain); end
		end
		my.auth[user] = {password = pass, domains = domains, admin = admin};
	end
	my.domains = Mailman.listDomains();
end

?>


<h1>RumbleLua users </h1>
<p>This page allows you to create, modify or delete accounts on the RumbleLua system.<br /> 
Users with <img src="../icons/action_lock.png" alt="lock" width="24" height="24" align="absmiddle" /><span style="color:#C33; font-weight:bold;"> Full control</span> can add, edit and delete domains as well as change server settings, <br />
while regular users can only
see and edit the domains they have access to.
</p>
<?

if ( http.form.username and http.form.password and http.form.rights ) then

	local rights = {};
	local admin = false;
	if ( type(http.form.rights) == "string") then 
		table.insert(rights, http.form.rights);
		if ( http.form.rights == "*" ) then admin = true; end
	else
		rights = http.form.rights;
		for k, v in pairs(http.form.rights) do if (v == "*") then admin = true end end
	end
	my.auth[http.form.username] = { password = http.form.password:SHA256(), domains = rights, admin = admin };
   my.writeconf = true;
elseif ( http.form.user and http.form.delete ) then
	if (http.form.user ~= session.credentials.user) then 
		my.auth[http.form.user] = nil; my.writeconf = true;
	else
		printf("<div class='notification'>For obvious reasons, you can't delete your own account!</div>");
	end
end
?>
<table class="elements">
  <tr>
    <th>Create a new user:</th>
  </tr>
<tr>
<td>
<form action="/users" method="post" name="makeuser">

  <div style="width: 300px; text-align:right; float: left;">
    <label for="username"><strong>Username:</strong></label>
    <input name="username" autocomplete="off" type="text" id="username" >
    <br>
    <label for="password"><strong>Password:</strong></label>
    <input type="password" autocomplete="off" name="password" id="password">
    <br />
    <label for="password"><strong>Access rights:</strong></label>
    <select name="rights" size="4" style="width: 150px;" multiple="multiple">
    <option value="*" style="color:#C33; font-weight:bold;">Full control</option>
    <optgroup label="Domains:">
    <?
	table.sort(my.domains);
	for key, domain in pairs(my.domains) do
		printf("<option>%s</option>\n", key);
	end
	?>
    </optgroup>
    </select>
      </div>
    <p><br /><br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

      &nbsp;&nbsp;
      <input type="submit" name="submit" id="submit" value="Submit" />
    </p>

</form>
</td>
</tr>
</table>
<table width="200" class="elements">
  <tr>
    <th>Username</th>
    <th>Rights</th>
    <th>Actions</th>
  </tr>
<?
for user, creds in pairs(my.auth) do
	local rights = "";
	icon = [[<img src="/icons/action_user.png" align="absmiddle"/>&nbsp;]];
	local xuser = user;
	if (creds.admin) then 
		rights = "Full control";
		icon = [[<img src="/icons/action_lock.png" align="absmiddle"/>&nbsp;]];
		xuser = "<font color='#006600'>"..user.."</font>";
	else
	table.sort(creds.domains);
		rights = table.concat(creds.domains, ", ");
	end
	printf([[
  <tr>
    <td>%s<strong>%s</strong></td>
    <td>%s</td>
    <td>
	<a href="/users?user=%s&edit=true"><img src="/icons/action_edit.png" title="Edit" align="absmiddle"/></a>&nbsp;
	<a href="/users?user=%s&delete=true"><img src="/icons/action_delete.png" title="Delete" align="absmiddle"/></a>
	</td>
  </tr>
  ]],icon, xuser, rights,user,user);
end
?>
</table>
<p>&nbsp;</p>

<?
if (my.writeconf) then
	local cfg = io.open(session.path .. "/auth.cfg", "w+");
	if (cfg) then
		cfg:write("# Auto-generated by RumbleLua #\r\n");
		for user, creds in pairs(my.auth) do
			local rights = table.concat(creds.domains, ",");
			if (creds.admin) then rights = "*"; end
			cfg:write(user .. ":" .. creds.password .. ":" .. rights .. "\r\n");
		end
		cfg:close();
	end
end
?>