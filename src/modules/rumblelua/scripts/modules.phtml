<?
if (not session.credentials.admin) then
?>
	<div class='notification'>You need admin priveledges to access this page!</div>
<?
	return;
end
?>
<h2>Set up modules</h2>
<table width="700" border="0" class="elements">
  <tr>
    <th width="186">filename</th>
    <th width="315">Module info</th>
    <th width="100">Status</th>
    <th width="81">Actions</th>
  </tr>

<?
for k,mod in pairs(Rumble.listModules()) do
	local hascfg = Rumble.getmoduleconfig(mod.file);
	local rawfile = mod.file:match("modules/(.*)") or "";
	local modlink = rawfile;
	local editlink = "";
	mod.description = (mod.description:len() > 0 and mod.description) or "<font color='#944'>(Disabled)</font>";
	if (mod.author) then 
		mod.author = mod.author:gsub("([a-zA-Z0-9\.\_\-]+@[a-zA-Z0-9\.\_\-]+)", "<a href='mailto:%1'>%1</a>");
		mod.description = mod.description .. "<br/>Author: " .. mod.author;
	end
	if (hascfg) then
		modlink = "<a href=\"/modules:"..rawfile.."\">"..rawfile.."</a>";
		editlink = "<a href='/modules:"..rawfile.."'><img src='/icons/report_edit.png' border='0' align='absmiddle' hspace='4'>Edit</a>";
	end
--	printf("<tr><td colspan='4'><hr/></td></tr>");
	printf("<tr><td valign='top'><img src='/icons/sidebar_modules.png' align='absmiddle'/> %s</td><td><b>%s</b><br/><small>%s</small></td><td>%s</td><td>%s</td></tr>", modlink, mod.title or mod.file, mod.description or "", (hascfg and "<font color='#272'>Configurable</font>") or "<font color='#732'>N/A</font>", editlink);
end
?>

</table>
<hr/>

<p>
  <?

if (session.section == "reload" and session.credentials.admin) then
	printf(Rumble.readConfig("config-dir") .. "/rumble.conf");
	local f = io.open(Rumble.readConfig("config-dir") .. "/rumble.conf", "r");
    if (f) then
	    local cfg = f:read("*a");
	    f:close();
	    cfg = cfg:gsub("mydomain.tld", "gruno.dk");
        local f = io.open(Rumble.readConfig("config-dir") .. "/rumble.conf", "w+");
        f:write(cfg);
        f:close();
    end
    Rumble.reloadConfiguration();
--	Rumble.reloadModules();
    printf("<div class='notification'>Service notification:<br/>Modules have been reloaded!</div>");
end


local module;
for k,mod in pairs(Rumble.listModules()) do
	if (mod.file == "modules/"..session.section) then
		module = mod;
		break;
	end
end
local cfg = Rumble.getmoduleconfig("modules/"..session.section);

if (http.form.saveConfig and module) then
		for k, v in pairs(http.form) do
			if (k ~= "saveConfig") then
				if (type(v) == "table") then v = v[#v]; end
				Rumble.setmoduleconfig("modules/"..session.section, k, v);
			end
		end
		cfg = nil;
		printf("<div class='notification'>Service notification:<br/>Configuration for '%s' saved.</div>", module.title or module.file);
	end
	
	
if (cfg) then
	local rawfile = module.file:match("modules/(.*)") or "";
	printf("<form action='/modules:%s' method='post'><input type='hidden' name='saveConfig' value='yes'/><table border='0' class='elements'>", rawfile);
	printf("<tr><th colspan='2' class='orange'>Configuration for '%s':</th></tr>", module.title or module.file);
	for k, entry in pairs(cfg) do
		if (entry.type == "string" or entry.type == "number") then
			printf("<tr><td valign='top'><b>%s:</b></td><td><input  type='text' name='%s' value=\"%s\" style='width:%upx;'/><br/><i>%s</i><hr/></td></tr>", entry.key, entry.key, entry.value, entry.length*10, entry.description or "(no description)");
			else
			printf("<input type=\"hidden\" name=\"%s\" value=\"0\" />", entry.key);
			printf("<tr><td valign='top'><b>%s:</b></td><td><input type='checkbox' name=\"%s\" %s value=\"1\" /><br/><i>%s</i><hr/></td></tr>", entry.key, entry.key, (entry.value and "checked") or "", entry.description or "(no description)");

			end
	end
	printf("<tr><td colspan='2'><input type='submit' value='Save configuration'/></table></form>");
end
?>
</p>
<p>&nbsp;</p>

