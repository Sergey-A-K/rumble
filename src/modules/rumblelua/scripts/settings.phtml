<h1>Server settings</h1>

<?
if (not session.credentials.admin) then
	echo("<div class='notification'>You need admin priveledges to access this page!</div>");
	return
end
if (session.section and http.form.save and session.credentials.admin) then
	printf("Saving " .. Rumble.readConfig("config-dir") .. "/rumble.conf");
	local f = io.open(Rumble.readConfig("config-dir") .. "/rumble.conf", "r");
    if (f) then
	    local cfg = f:read("*a");
	    f:close();
	    cfg = cfg:gsub("(\n%s*)(%w+)(%s+)([^\r\n]+)", 
			function(x,a,b,c)
				local k = a:lower();
				if (k == "servername") then c = http.form.servername or "my.tld";end
				if (k == "runas") then c = http.form.runas or "";end
				if (k == "forceipv4") then c = http.form.forceipv4 or 0;end
				if (k == "messagesizelimit") then c = http.form.messagesizelimit or 0;end
				if (k == "storagefolder") then c = http.form.mailpath or "";end
				if (k == "datafolder") then c = http.form.dbpath or "";end
				if (k == "enablesmtp") then c = http.form.smtp or 0;end
				if (k == "enablepop3") then c = http.form.pop3 or 0;end
				if (k == "enableimap4") then c = http.form.imap4 or 0;end
				if (k == "smtpport") then c = http.form.smtpport or "";end
				if (k == "pop3port") then c = http.form.pop3port or "";end
				if (k == "imap4port") then c = http.form.imap4port or "";end
				if (k == "deliveryattempts") then c = http.form.deliveryattempts or 5;end
				if (k == "retryinterval") then c = http.form.retryinterval or 360;end
				if (k == "bindtoaddress") then c = http.form.bindtoaddress or "0.0.0.0";end
				return x..a..b..c;
			end
		);
        local f = io.open(Rumble.readConfig("config-dir") .. "/rumble.conf", "w+");
		if (f) then
	        f:write(cfg);
	        f:close();
			Rumble.reloadConfiguration();
			session:send("HTTP/1.1 302 Moved\r\nLocation: /settings:save\r\n\r\n");
			return;
		else
			printf("<div class='notification'>Settings could not be saved!<br/>Do I have permission to write config/rumble.conf?</div>");
			session.section = "";
		end
    end

end
if (session.section ~= "") then
	printf("<div class='notification'>Settings saved!</div>");
end

?>
<form id="form1" name="form1" method="post" action="/settings:save">
<input type="hidden" name="save" value="true"/>
  <table width="572" border="0" cellpadding="4" class="elements">
    <tr>
      <th colspan="3">Run-time configuration
        </td></th>
    </tr>
    <tr>
      <td><strong>Run as user:</strong></td>
      <td colspan="2"><label for="servername2"></label>
        <input type="text" name="runas" id="runas" value="<?=Rumble.readConfig("runas")?>" />
        (only applies to UNIX)</td>
    </tr>
    <tr>
      <td height="23" colspan="3"><hr /></td>
    </tr>
    <tr>
      <th colspan="3">Network configuration</td>    </tr>
    <tr>
      <td width="179"><strong>Server name:</strong></td>
      <td colspan="2"><label for="servername"></label>
      <input type="text" name="servername" id="servername" value="<?=Rumble.readConfig("servername")?>" /> 
      (fx. mx.mydomain.com)</td>
    </tr>
    <tr>
      <td><strong>Networking mode:</strong></td>
      <td><select name="forceipv4">
        <option value="1" <?if (Rumble.readConfig("forceipv4") == "1") then printf("selected"); end
	  ?>>IPv4</option>
        <option value="0">IPv6</option>
      </select>
      <label for="forceipv4"></label></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td><strong>Bind to IP:</strong></td>
      <td colspan="2"><label for="servername4"></label>
        <input type="text" name="bindtoaddress" id="bindtoaddress" value="<?=Rumble.readConfig("bindtoaddress")?>" size="15" />
        (Use 0.0.0.0 to bind to any IP)</td>
    </tr>
    <tr>
      <td><strong>Message size limit:</strong></td>
      <td width="268"><input name="messagesizelimit" type="text" id="messagesizelimit" value="<?=Rumble.readConfig("messagesizelimit")?>" size="10" /> 
        bytes</td>
      <td width="93">&nbsp;</td>
    </tr>
    <tr>
      <td height="23" colspan="3"><hr /></td>
    </tr>
    <tr>
      <th colspan="3">Storage and folders</tr>
    <tr>
      <td><strong>Default mail storage folder:</strong></td>
      <td><label for="mailpath"></label>
      <input name="mailpath" type="text" id="mailpath" size="40" value="<?=Rumble.readConfig("storagefolder")?>" /></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td><strong>Database folder (if SQLite3):</strong></td>
      <td><label for="dbpath"></label>
      <input name="dbpath" type="text" id="dbpath" size="40" value="<?=Rumble.readConfig("datafolder")?>"  /></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td height="23" colspan="3"><hr /></td>
    </tr>
    <tr>
      <th colspan="3">Services</tr>
    <tr>
      <td><strong>Enable SMTP server:</strong></td>
      <td><label>
        <input name="smtp" type="radio" id="smtp_0" value="0" 
        <?
      if (Rumble.readConfig("enablesmtp") == "0") then printf("checked=\"checked\""); end
	  ?>
        />
        No</label>
&nbsp;&nbsp;
<label>
  <input type="radio" name="smtp" value="1" id="smtp_1" 
        <?
      if (Rumble.readConfig("enablesmtp") == "1") then printf("checked=\"checked\""); end
	  ?>/>
  Yes, on port:</label>

<input name="smtpport"  value="<?=Rumble.readConfig("smtpport")?>" type="text" id="smtpport" size="3" maxlength="5" style="text-align:right;" /></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td><strong>Enable POP3 server:</strong></td>
      <td><label>
        <input type="radio" name="pop3" value="0" id="smtp_2" 
        <?
      if (Rumble.readConfig("enablepop3") == "0") then printf("checked=\"checked\""); end
	  ?>/>
        No</label>
&nbsp;&nbsp;
<label>
  <input type="radio" name="pop3" value="1" id="smtp_3" 
        <?
      if (Rumble.readConfig("enablepop3") == "1") then printf("checked=\"checked\""); end
	  ?> />
  Yes, on port:</label>

<input name="pop3port"  value="<?=Rumble.readConfig("pop3port")?>" type="text" id="pop3port" size="3" maxlength="5" style="text-align:right;" /></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td><strong>Enable IMAP4 server: </strong></td>
      <td><label>
        <input type="radio" name="imap4" value="0" id="smtp_4" 
        <?
      if (Rumble.readConfig("enableimap4") == "0") then printf("checked=\"checked\""); end
	  ?>/>
        No</label>
&nbsp;&nbsp;
<label>
  <input type="radio" name="imap4" value="1" id="smtp_5" 
        <?
      if (Rumble.readConfig("enableimap4") == "1") then printf("checked=\"checked\""); end
	  ?>/>
  Yes, on port:</label>

<input name="imap4port"  value="<?=Rumble.readConfig("imap4port")?>" type="text" id="imap4port" size="3" maxlength="5" style="text-align:right;" /></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td height="23" colspan="3"><hr /></td>
    </tr>
    <tr>
      <th colspan="3">Delivery options</th>
    </tr>
    <tr>
      <td><strong>Number of deliveries to attempt:</strong></td>
      <td><label for="deliveryattempts"></label>
        <input name="deliveryattempts" type="text" id="deliveryattempts" size="4" value="<?=Rumble.readConfig("deliveryattempts")?>" /> 
        attempts (default is 5 attempts)</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td><strong>Time interval for attempts:</strong></td>
      <td><label for="retryinterval"></label>
        <input name="retryinterval" type="text" id="retryinterval" size="4" value="<?=Rumble.readConfig("retryinterval")?>"  /> 
        seconds (default is 360 (6 minutes))</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td height="23" colspan="3"><hr /></td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td><input type="submit" name="Save settings" id="Save settings" value="Save settings" />&nbsp;&nbsp;&nbsp;        <input type="reset" name="Reset" id="button" value="Reset" /></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td colspan="3"><div align="center"><em><br />
      Some settings may not take effect until the server has been restarted.</em></div></td>
    </tr>
  </table>
</form>
<p>&nbsp;</p>
<p>&nbsp;</p>
<?

if (session.section == "reload" and session.credentials.admin) then
	printf(Rumble.readConfig("config-dir") .. "/rumble.conf");
	local f = io.open(Rumble.readConfig("config-dir") .. "/rumble.conf", "r");
    if (f) then
	    local cfg = f:read("*a");
	    f:close();
	    cfg = cfg:gsub("mydomain.tld", "gruno.dk");
        local f = io.open(Rumble.readConfig("config-dir") .. "/rumble.conf", "w+");
        f:write(cfg);
        f:close();
    end
    Rumble.reloadConfiguration();
--	Rumble.reloadModules();
    printf("<b>Modules have been reloaded!</b>");
end
?>

</pre>

